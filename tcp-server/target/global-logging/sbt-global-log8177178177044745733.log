[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\stani\AppData\Local\Temp\idea11.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\stani\AppData\Local\Temp\idea11.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.3 (AdoptOpenJDK Java 11.0.10)
[debug]       Load.loadUnit: plugins took 86.2444ms
[debug]       Load.loadUnit: defsScala took 0.2843ms
[debug] [Loading] Scanning directory C:\Users\stani\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\stani\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 23.2957 ms
[debug]           Load.resolveProject(global-plugins) took 44.9112ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\stani\.sbt\1.0\plugins, plugins: List(<none>))) took 93.2684ms
[debug] [Loading] Done in C:\Users\stani\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 115.7058ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2606ms
[debug]     Load.loadUnit(file:/C:/Users/stani/.sbt/1.0/plugins/, ...) took 211.0339ms
[debug]   Load.apply: load took 359.8973ms
[debug]   Load.apply: resolveProjects took 4.9052ms
[debug]   Load.apply: finalTransforms took 56.217ms
[debug]   Load.apply: config.delegates took 6.06ms
[debug]   Load.apply: Def.make(settings)... took 859.4425ms
[debug]   Load.apply: structureIndex took 96.5479ms
[debug]   Load.apply: mkStreams took 1.5941ms
[info] loading global plugins from C:\Users\stani\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2788.6235ms
[debug]           Load.loadUnit: plugins took 27.3343ms
[debug]           Load.loadUnit: defsScala took 0.0038ms
[debug] [Loading] Scanning directory D:\Scala\Projects\tcp-server\project
[debug]             Load.loadUnit: mkEval took 7.848ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Scala\Projects\tcp-server\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.5293 ms
[info] loading settings for project tcp-server-build from plugins.sbt,idea11.sbt ...
[debug]               Load.resolveProject(tcp-server-build) took 2.6793ms
[debug]             Load.loadTransitive: finalizeProject(Project(id tcp-server-build, base: D:\Scala\Projects\tcp-server\project, plugins: List(<none>))) took 4.6712ms
[debug] [Loading] Done in D:\Scala\Projects\tcp-server\project, returning: (tcp-server-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 128.9042ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.3609ms
[debug]         Load.loadUnit(file:/D:/Scala/Projects/tcp-server/project/, ...) took 161.5863ms
[debug]       Load.apply: load took 162.8979ms
[debug]       Load.apply: resolveProjects took 0.0922ms
[debug]       Load.apply: finalTransforms took 7.6273ms
[debug]       Load.apply: config.delegates took 0.3546ms
[debug]       Load.apply: Def.make(settings)... took 67.0857ms
[debug]       Load.apply: structureIndex took 26.4711ms
[debug]       Load.apply: mkStreams took 0.0021ms
[info] loading project definition from D:\Scala\Projects\tcp-server\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 492.6448ms
[debug]     Load.loadUnit: defsScala took 0.0032ms
[debug] [Loading] Scanning directory D:\Scala\Projects\tcp-server
[debug]       Load.loadUnit: mkEval took 0.2238ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Scala\Projects\tcp-server, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbteclipse.plugin.EclipsePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(com.typesafe.sbteclipse.plugin.EclipsePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,com.typesafe.sbteclipse.plugin.EclipsePlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.8454 ms
[info] loading settings for project tcp-server from build.sbt ...
[debug]         Load.resolveProject(tcp-server) took 30.8314ms
[debug]       Load.loadTransitive: finalizeProject(Project(id tcp-server, base: D:\Scala\Projects\tcp-server, plugins: List(<none>))) took 33.8001ms
[debug] [Loading] Done in D:\Scala\Projects\tcp-server, returning: (tcp-server)
[debug]     Load.loadUnit: loadedProjectsRaw took 70.9092ms
[debug]     Load.loadUnit: cleanEvalClasses took 3.8012ms
[debug]   Load.loadUnit(file:/D:/Scala/Projects/tcp-server/, ...) took 567.8891ms
[debug] Load.apply: load took 569.456ms
[debug] Load.apply: resolveProjects took 0.0902ms
[debug] Load.apply: finalTransforms took 22.6985ms
[debug] Load.apply: config.delegates took 0.4031ms
[debug] Load.apply: Def.make(settings)... took 102.0511ms
[debug] Load.apply: structureIndex took 22.4257ms
[debug] Load.apply: mkStreams took 0.0025ms
[info] set current project to tcp-server (in build file:/D:/Scala/Projects/tcp-server/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54460 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54460, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to tcp-server (in build file:/D:/Scala/Projects/tcp-server/)
[debug] > Exec(idea-shell, None, None)
